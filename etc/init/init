#!/usr/bin/env bash

# Author: takuzoo3868
# Last Modified: 24 Oct 2017.

trap 'echo Error: $0:$LINENO stopped; exit 1' ERR INT
set -euo pipefail

# set dotfiles path
dotfiles=$HOME/.dotfiles

# use colors on terminal
tput=$(which tput)
if [ -n "$tput" ]; then
  ncolors=$($tput colors)
fi
if [ -t 1 ] && [ -n "$ncolors" ] && [ "$ncolors" -ge 8 ]; then
  RED="$(tput setaf 1)"
  GREEN="$(tput setaf 2)"
  YELLOW="$(tput setaf 3)"
  BLUE="$(tput setaf 4)"
  BOLD="$(tput bold)"
  NORMAL="$(tput sgr0)"
else
  RED=""
  GREEN=""
  YELLOW=""
  BLUE=""
  BOLD=""
  NORMAL=""
fi

### functions
# info: output terminal green
info() { 
  printf "${GREEN}"
  echo -n "  info  "
  printf "${NORMAL}"
  echo "$1"
}
# error: output terminal red
error() {
  printf "${RED}"
  echo -n "  error "
  printf "${NORMAL}"
  echo "$1"
}
# warn: output terminal yellow
warn() {
  printf "${YELLOW}"
  echo -n "  warn  "
  printf "${NORMAL}"
  echo "$1"
}
# log: out put termial normal
log() { 
  echo "  $1" 
}


# fix sed command diff between GNU & BSD
if sed --version 2>/dev/null | grep -q GNU; then
  alias sedi='sed -i '
else
  alias sedi='sed -i "" '
fi

# check package & return flag
is_exists() {
  which "$1" >/dev/null 2>&1
  return $?
}

# check package
has() {
  type "$1" > /dev/null 2>&1
}

# create symlink
symlink() {
  [ -e "$2" ] || ln -sf "$1" "$2"
}


### Start install script

DOTFILES_GITHUB="https://github.com/takuzoo3868/dotfiles.git"

dotfiles_logo='
██████╗  ██████╗ ████████╗███████╗██╗██╗     ███████╗███████╗
██╔══██╗██╔═══██╗╚══██╔══╝██╔════╝██║██║     ██╔════╝██╔════╝
██║  ██║██║   ██║   ██║   █████╗  ██║██║     █████╗  ███████╗
██║  ██║██║   ██║   ██║   ██╔══╝  ██║██║     ██╔══╝  ╚════██║
██████╔╝╚██████╔╝   ██║   ██║     ██║███████╗███████╗███████║
╚═════╝  ╚═════╝    ╚═╝   ╚═╝     ╚═╝╚══════╝╚══════╝╚══════╝

*** WHAT IS INSIDE? ***
1. Download my dotfiles from https://github.com/takuzoo3868/dotfiles
2. Symlinking dotfiles to your home directory
3. Install packages
   [coreutils bash vim git python tmux curl fish]

*** HOW TO INSTALL? ***
See the README for documentation.
Licensed under the MIT license.  
'

printf "${BOLD}"
echo   "$dotfiles_logo"
printf "${NORMAL}"

log "*** ATTENTION ***"
log "This script can change your entire setup."
log "I recommend to read first. You can even copy commands one by one."
log "If you use termux on Android, try this."
log "$ /data/data/com.termux/files/usr/bin/bash"
echo ""
read -p "$(warn '(U^w^) < Are you sure you want to install it? [y/N] ')" -n 1 -r


if [[ ! $REPLY =~ ^[Yy]$ ]]; then
  echo ""
  error 'Installation failed. Nothing changed.'
  exit 1
fi

echo ""
info "Start install the dotfiles."

if [ ! -d "$dotfiles" ]; then
  if is_exists "git"; then
    info "Installing dotfiles for the first time..."
    git clone "$DOTFILES_GITHUB" "$dotfiles"
    info "The dofiles is installed!!!"

  elif is_exists "curl" || is_exists "wget"; then
    local zip_url="https://github.com/takuzoo3868/dotfiles/archive/master.zip"

    if is_exists "curl"; then
      curl -L "$zip_url"

    elif is_exists "wget"; then
      wget -O - "$zip_url"
    fi | tar xvz
    
    if [ ! -d dotfiles-master ]; then
      error "dotfiles-master: not found"
      exit 1
    fi
    mv -f dotfiles-master "$dotfiles"
    info "The dofiles is installed!!!"

  else
    error "curl or wget required"
    exit 1
  fi
else
  info "The dofiles is already installed!!!"
fi

## install packages
echo ""
info "Installing packages..."

# package list
LIST_OF_APPS="coreutils bash vim git python tmux curl fish"


if [ $(uname -o) = "Android" ]; then
  ADD_APP_ANDROID="ncurses-utils binutils coreutils file grep wget taskwarrior"

  info "apt update"
  pkg update

  info "apt install $LIST_OF_APPS & $ADD_APP_ANDROID"
  pkg install "$ADD_APP_ANDROID"
  pkg install "$LIST_OF_APPS"

  info "pkg install neovim"
  pkg install neovim

  #info "termux-setup-storage"
  termux-setup-storage

elif [[ $(uname) = "Linux" ]]; then

  ## Arch Linux
  if [ -f /etc/arch-release ]; then
    if ! has yay; then
      warn "yay has not installed yet."
      git clone https://aur.archlinux.org/yay.git
      cd yay && makepkg -si
    fi

    ADD_APP_ARCH="phq peco hub sakura fzf p7zip neovim python2-neovim python-neovim llvm baobab radare2 weechat ranger"

    info "yay update"
    yay -Syu --noconfirm

    info "yay -S $LIST_OF_APPS & $ADD_APP_ARCH"
    yay -S --needed $LIST_OF_APPS
    yay -S --needed $ADD_APP_ARCH

  ## Ubuntu / Debian
  elif [ -f /etc/debian_version ] || [ -f /etc/debian_release ]; then
    ADD_APP_DEBIAN="openssh-server"

    info "sudo apt update"
    sudo apt update -q

    info "sudo apt install $LIST_OF_APPS & $ADD_APP_DEBIAN"
    sudo apt install -q -y $LIST_OF_APPS
    sudo apt install -q -y $ADD_APP_DEBIAN

    if ! has nvim; then
      echo ""
      info "Hasnt installed neovim yet. installing..."
      sudo apt install software-properties-common
      sudo add-apt-repository ppa:neovim-ppa/stable
      sudo apt update -q
      sudo apt-get install neovim
      sudo apt install python-dev python-pip python3-dev python3-pip
      sudo apt install xclip xsel
      info "Installed neovim!!!"
    fi

  fi

elif [[ $(uname) = "Darwin" ]]; then
  ADD_APP_MAC="task trash exiftool peco screenfetch neovim wget bat binutils p7zip tree llvm ranger"

  info "xcode-select --install"
  touch /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress;
  PROD=$(softwareupdate -l |
    grep "\*.*Command Line" |
    head -n 1 | awk -F"*" '{print $2}' |
    sed -e 's/^ *//' |
    tr -d '\n')
  softwareupdate -i "$PROD" -v;

  if ! hash brew 2> /dev/null; then
    info "Homebrew is not instaled!!!"
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    brew tap caskroom/cask
    brew cask --version
  fi

  info "brew install $LIST_OF_APPS & $ADD_APP_MAC"
  brew install $LIST_OF_APPS
  brew install $ADD_APP_MAC

else
  # F0ck wind0ws. G0 t0 he11!
  error "Your platform ($(uname -a)) is not supported."
  exit 1
fi


## create symbolic link
echo ""
warn "[Deprecated] RUN symlink.sh "
echo ""

echo ""
info "Installation(init) completed."
